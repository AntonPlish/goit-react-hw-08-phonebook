{"version":3,"file":"static/js/966.43d78dbc.chunk.js","mappings":"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","sources":["components/Form/Form.jsx","redux/contacts/selectors.js","components/Filter/Filter.jsx","components/Contacts/ContactItem.jsx","components/Contacts/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage} from 'formik';\nimport styled from '@emotion/styled';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nconst FormStyled = styled.section`\n  padding: 8px;\n`;\n\nconst Label = styled.label`\n  display: block;\n`;\n\nconst Input = styled(Field)`\n  color: grey;\n  font-size: 16px;\n  margin-bottom: 8px;\n`;\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().required(),\n});\n\nconst ContactForm = function () {\n  const dispatch = useDispatch();\n  const handleSubmit = values => {\n    dispatch(addContact(values));\n  };\n\n  return (\n    <FormStyled>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        validationSchema={schema}\n        onSubmit={(values, { resetForm }) => {\n          handleSubmit(values);\n          resetForm();\n        }}\n      >\n        <Form>\n          <Label>\n            Name\n            <br />\n            <Input type=\"text\" name=\"name\" />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </Label>\n          <br />\n          <Label>\n            Number\n            <br />\n            <Input type=\"tel\" name=\"number\"/>\n            <ErrorMessage name=\"number\" component=\"div\" />\n          </Label>\n          <br />\n          <button style={{ backgroundColor: 'lightgreen', border: '0', borderRadius: '5px', width: '150px', height: '30px' }}\n            type=\"submit\" name=\"addContact\">\n            Add contact\n          </button>\n        </Form>\n      </Formik>\n    </FormStyled>\n  );\n};\n\nexport default ContactForm;","export const selectContact = state => state.contacts.contacts;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.text;","import { Formik, Form, Field } from 'formik';\nimport styled from '@emotion/styled';\nimport { contactsFilter } from 'redux/filterSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nconst FilterPlateStyled = styled.section`\n  border: 1px solid lightgrey;\n  padding: 8px;\n  margin-bottom: 16px;\n`;\n\nconst Input = styled(Field)`\n  color: #2a2a2a;\n  font-size: 16px;\n`;\n\nconst Filter = function () {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleFilter = query => dispatch(contactsFilter(query));\n  \n  return (\n    <FilterPlateStyled style={{ border: '0' }}>\n      <Formik initialValues={{ filter: filter }}>\n        <Form>\n          <label>\n            Find contact\n            <br />\n            <Input\n              type=\"text\"\n              name=\"filter\"\n              value={filter}\n              onChange={error => {\n                handleFilter(error.target.value);\n              }}\n            ></Input>\n          </label>\n        </Form>\n      </Formik>\n    </FilterPlateStyled>\n  );\n};\n\nexport default Filter;","import styled from '@emotion/styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ItemStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 8px;\n`;\n\nconst ContactItem = function ({ contact }) {\n  const dispatch = useDispatch();\n  const HandleDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <ItemStyled>\n      <span>{contact.name}:</span> <span>{contact.number}</span>\n      <button\n        style={{ backgroundColor: 'tomato', border: '0', borderRadius: '5px', width: '150px', height: '30px'}}\n        type=\"button\"\n        name=\"deleteBtn\"\n        onClick={() => HandleDelete(contact.id)}\n      >\n        Delete\n      </button>\n    </ItemStyled>\n  );\n};\n\nexport default ContactItem;","import styled from '@emotion/styled';\nimport ContactItem from './ContactItem';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContact, selectFilter } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst ListSlyled = styled.ul`\n  list-style: none;\n  padding: 0;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nconst ContactList = function () {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContact);\n  const filterText = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ListSlyled>\n      {contacts\n        .filter(contact =>\n          contact.name.toLowerCase().includes(filterText.toLowerCase())\n        )\n        .map((contact, id) => {\n          return <li key={id}>{<ContactItem contact={contact} />}</li>;\n        })}\n    </ListSlyled>\n  );\n};\n\nexport default ContactList;","import { useSelector } from 'react-redux';\nimport ContactForm from 'components/Form/Form';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/Contacts/ContactList';\nimport { selectLoading, selectError } from 'redux/contacts/selectors';\n\nconst styles = {\n    main: {\n        width: '520px',\n        margin: '0 auto',\n        fontSize: '16px',\n    },\n};\n\nexport default function Contacts() {\n    const isLoading = useSelector(selectLoading);\n    const error = useSelector(selectError);\n\n    return (\n        <div style={styles.main}>\n            <h1>Phonebook</h1>\n            <ContactForm />\n            {isLoading && !error && <b>Request in progress...</b>}\n            <h2>Contacts</h2>\n            <Filter />\n            <ContactList />\n        </div>\n    );\n}"],"names":["FormStyled","styled","Label","Input","Field","schema","yup","shape","name","required","number","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","addContact","handleSubmit","type","component","style","backgroundColor","border","borderRadius","width","height","selectContact","state","contacts","selectLoading","isLoading","selectError","error","selectFilter","filter","text","FilterPlateStyled","useSelector","value","onChange","query","target","contactsFilter","ItemStyled","contact","onClick","id","deleteContact","ListSlyled","filterText","useEffect","fetchContacts","toLowerCase","includes","map","styles","main","margin","fontSize","Contacts"],"sourceRoot":""}